{"version":3,"sources":["assets/noPosterSmall.png","Components/Header.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","styled","header","_templateObject","List","ul","_templateObject2","Item","li","_templateObject3","props","current","SLink","Link","_templateObject4","withRouter","_ref","pathname","location","react_default","a","createElement","to","Container","div","Section_templateObject","Title","span","Section_templateObject2","Grid","Section_templateObject3","Section","title","children","Loader_templateObject","Loader","Loader_Container","role","aria-label","Message_templateObject","Text","Message_templateObject2","color","Message","text","Message_Container","Poster_templateObject","Image","Poster_templateObject2","bgUrl","Rating","Poster_templateObject3","ImageContainer","Poster_templateObject4","_templateObject5","Year","_templateObject6","Poster","id","imageUrl","rating","year","_ref$isMovie","isMovie","concat","Poster_Container","require","Poster_Title","length","substring","HomePresenter_templateObject","HomePresenter","nowPlaying","popular","upcoming","error","loading","Fragment","Helmet_default","HomePresenter_Container","Components_Section","map","movie","Components_Poster","key","original_title","poster_path","vote_average","release_date","Components_Message","api","axios","create","baseURL","params","api_key","language","get","tvApi","topRated","airingToday","showDetail","parms","append_to_response","search","term","query","encodeURIComponent","moviesApi","movieDetail","HomeContainer","state","data","results","this","setState","_this$state","Home_HomePresenter","React","Component","TVPresenter_templateObject","TVPresenter","TVPresenter_Container","show","original_name","TVContainer","TV_TVPresenter","SearchPresenter_templateObject","Form","form","SearchPresenter_templateObject2","Input","input","SearchPresenter_templateObject3","SearchPresenter","movieResults","tvResults","searchTerm","updateTerm","handleSubmit","SearchPresenter_Container","onSubmit","e","placeholder","value","onChange","SearchContainer","event","target","_this","preventDefault","searchByTerm","_callee","_ref2","_ref3","regenerator_default","wrap","_context","prev","next","sent","t0","finish","stop","Search_SearchPresenter","DetailPresenter_templateObject","Backdrop","DetailPresenter_templateObject2","bgImage","Content","DetailPresenter_templateObject3","Cover","DetailPresenter_templateObject4","Data","DetailPresenter_templateObject5","h3","DetailPresenter_templateObject6","ItemContainer","_templateObject7","_templateObject8","Divider","_templateObject9","Overview","_templateObject10","DetailPresenter","result","DetailPresenter_Container","backdrop_path","DetailPresenter_Title","DetailPresenter_Item","first_air_date","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","_default","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","includes","match","push","history","parsedId","parseInt","isNaN","console","log","Detail_DetailPresenter","Router","BrowserRouter","Components_Header","Switch","Route","path","exact","component","Home","TV","Search","Detail","Redirect","from","GlobalStyles","createGlobalStyle","GlobalStyles_templateObject","reset","App","Components_GlobalStyles","ReactDOM","render","Components_App","document","getElementById"],"mappings":"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","file":"static/js/main.97d1cf85.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.87a0eb6a.png\";","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  padding: 0px 10px;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n\n  border-bottom: 5px solid\n    ${props => (props.current ? \"#3498db\" : \"transparent\")};\n  transition: border-bottom 0.5s ease-in-out;\n`;\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">Movie</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n`;\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ])\n};\n\nexport default Section;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  margin-top: 20px;\n`;\n\nexport default () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      ⏱\n    </span>\n  </Container>\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${props => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string,\n  color: PropTypes.string\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${props => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : require(\"../assets/noPosterSmall.png\")\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>{\" \"}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 18 ? title : `${title.substring(0, 18)}...`}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool\n};\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\n\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, popular, upcoming, error, loading }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading... | Netflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : (\n    <Container>\n      <Helmet>\n        <title>Movies | Netflix</title>\n      </Helmet>\n      {nowPlaying && nowPlaying.length > 0 && (\n        <Section title=\"Now Playing\">\n          {nowPlaying.map(movie => (\n            <Poster\n              key={movie.id}\n              id={movie.id}\n              title={movie.original_title}\n              imageUrl={movie.poster_path}\n              isMovie={true}\n              rating={movie.vote_average}\n              year={movie.release_date && movie.release_date.substring(0, 4)}\n            />\n          ))}\n        </Section>\n      )}\n      {upcoming && upcoming.length > 0 && (\n        <Section title=\"Upcoming Movies\">\n          {upcoming.map(movie => (\n            <Poster\n              key={movie.id}\n              id={movie.id}\n              title={movie.original_title}\n              imageUrl={movie.poster_path}\n              isMovie={true}\n              rating={movie.vote_average}\n              year={movie.release_date && movie.release_date.substring(0, 4)}\n            />\n          ))}\n        </Section>\n      )}\n      {popular && popular.length > 0 && (\n        <Section title=\"Popular Movies\">\n          {popular.map(movie => (\n            <Poster\n              key={movie.id}\n              id={movie.id}\n              title={movie.original_title}\n              imageUrl={movie.poster_path}\n              isMovie={true}\n              rating={movie.vote_average}\n              year={movie.release_date && movie.release_date.substring(0, 4)}\n            />\n          ))}\n        </Section>\n      )}\n      {error && <Message text={error} color=\"#e74c3c\" />}\n    </Container>\n  );\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  popular: PropTypes.array,\n  upcoming: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired\n};\n\nexport default HomePresenter;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"a658558021f386d42de63ce01f55a88c\",\n    language: \"es-US\"\n  }\n});\n\napi.get(\"tv/popular\");\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: id =>\n    api.get(`tv/${id}`, { parms: { append_to_response: \"videos\" } }),\n  search: term =>\n    api.get(\"search/tv\", { params: { query: encodeURIComponent(term) } })\n};\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: id =>\n    api.get(`/movie/${id}`, { parms: { append_to_response: \"videos\" } }),\n  search: term =>\n    api.get(\"search/movie\", { params: { query: encodeURIComponent(term) } })\n};\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { moviesApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying }\n      } = await moviesApi.nowPlaying();\n\n      const {\n        data: { results: upcoming }\n      } = await moviesApi.upcoming();\n      const {\n        data: { results: popular }\n      } = await moviesApi.popular();\n\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular\n      });\n    } catch (error) {\n      this.setState({ error: \"Can't get Movies information\" });\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\n\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, error, loading }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading... | Netflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : (\n    <Container>\n      <Helmet>\n        <title>TV | Netflix</title>\n      </Helmet>\n      {topRated && topRated.length > 0 && (\n        <Section title=\"Top Rated Shows\">\n          {topRated.map(show => (\n            <Poster\n              key={show.id}\n              id={show.id}\n              title={show.original_name}\n              imageUrl={show.poster_path}\n              isMovie={false}\n              rating={show.vote_average}\n              year={show.release_date && show.release_date.substring(0, 4)}\n            />\n          ))}\n        </Section>\n      )}\n      {popular && popular.length > 0 && (\n        <Section title=\"Popular Shows\">\n          {popular.map(show => (\n            <Poster\n              key={show.id}\n              id={show.id}\n              title={show.original_name}\n              imageUrl={show.poster_path}\n              isMovie={false}\n              rating={show.vote_average}\n              year={show.release_date && show.release_date.substring(0, 4)}\n            />\n          ))}\n        </Section>\n      )}\n      {airingToday && airingToday.length > 0 && (\n        <Section title=\"Airing Today\">\n          {airingToday.map(show => (\n            <Poster\n              key={show.id}\n              id={show.id}\n              title={show.original_name}\n              imageUrl={show.poster_path}\n              isMovie={false}\n              rating={show.vote_average}\n              year={show.release_date && show.release_date.substring(0, 4)}\n            />\n          ))}\n        </Section>\n      )}\n      {error && <Message text={error} color=\"#e74c3c\" />}\n    </Container>\n  );\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired\n};\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    error: null,\n    loading: true\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated }\n      } = await tvApi.topRated();\n      const {\n        data: { results: popular }\n      } = await tvApi.popular();\n      const {\n        data: { results: airingToday }\n      } = await tvApi.airingToday();\n\n      this.setState({\n        topRated,\n        popular,\n        airingToday\n      });\n    } catch (error) {\n      this.setState({ error: \"Can't Get TV information\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, error, loading } = this.state;\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\n\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  searchTerm,\n  error,\n  loading,\n  updateTerm,\n  handleSubmit\n}) => (\n  <Container>\n    <Helmet>\n      <title>Search | Netflix</title>\n    </Helmet>\n\n    <Form onSubmit={e => handleSubmit(e)}>\n      <Input\n        placeholder=\"Search Movies or TV Shows..\"\n        value={searchTerm}\n        onChange={updateTerm}\n      />\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResults.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                isMovie={true}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"TV Results\">\n            {tvResults.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.original_name}\n                imageUrl={show.poster_path}\n                isMovie={false}\n                rating={show.vote_average}\n                year={show.release_date && show.release_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message text={error} color=\"#e74c3c\" />}\n        {tvResults &&\n          movieResults &&\n          tvResults.length === 0 &&\n          movieResults.length === 0 && (\n            <Message text=\"Nothing Found\" color=\"#95a5a6\" />\n          )}\n      </>\n    )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  searchTerm: PropTypes.string,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    error: null,\n    loading: false\n  };\n\n  componentDidMount() {\n    this.handleSubmit();\n  }\n\n  updateTerm = event => {\n    const {\n      target: { value }\n    } = event;\n    this.setState({\n      searchTerm: value\n    });\n  };\n\n  handleSubmit = event => {\n    if (event) {\n      event.preventDefault();\n    }\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({ loading: true });\n    try {\n      const {\n        data: { results: movieResults }\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults }\n      } = await tvApi.search(searchTerm);\n\n      this.setState({ movieResults, tvResults });\n    } catch {\n      this.setState({ error: \"Can't find results.\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, error, loading } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        error={error}\n        loading={loading}\n        updateTerm={this.updateTerm}\n        handleSubmit={this.handleSubmit}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\n\nimport Loader from \"../../Components/Loader\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  position: relative;\n  z-index: 1;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  height: 100%;\n\n  background-image: url(${props => props.bgImage});\n  background-size: cover;\n  background-position: center center;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n  margin-bottom: 20px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 2;\n  width: 50%;\n`;\n\nconst DetailPresenter = ({ result, error, loading }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading... | Netflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\n          | Netflix\n        </title>\n      </Helmet>\n\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require(\"../../assets/noPosterSmall.png\")\n          }\n        />\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>∙</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\n            </Item>\n            <Divider>∙</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `\n                )}\n            </Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired\n};\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const {\n      location: { pathname }\n    } = props;\n\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\")\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id }\n      },\n      history: { push }\n    } = this.props;\n    const { isMovie } = this.state;\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n    let result;\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parsedId));\n      }\n    } catch {\n      this.setState({ error: \"Can't find anything..:(\" });\n    } finally {\n      this.setState({ loading: false, result });\n      console.log(this.state);\n    }\n  }\n\n  render() {\n    const { result, error, loading } = this.state;\n    return <DetailPresenter result={result} error={error} loading={loading} />;\n  }\n}\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from \"react-router-dom\";\nimport Header from \"Components/Header\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Search from \"Routes/Search\";\nimport Detail from \"Routes/Detail\";\n\nexport default () => (\n  <Router>\n    <>\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/tv\" component={TV} />\n        <Route path=\"/search\" component={Search} />\n        <Route path=\"/movie/:id\" component={Detail} />\n        <Route path=\"/show/:id\" component={Detail} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </>\n  </Router>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst GlobalStyles = createGlobalStyle`\n  ${reset};\n  a{\n    text-decoration:none;\n    color:inherit;\n  }\n  *{\n    box-sizing:border-box;\n  }\n  body{\n    font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    font-size:12px;\n    background-color:rgba(20, 20, 20, 1);\n    color:white;\n    padding-top:50px;\n  }\n`;\n\nexport default GlobalStyles;\n","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}